
version: '2.1'
volumes:
  pbft-shared:
services:

  simple-supply-shell:
    build:
      context: .
      dockerfile: ./shell/Dockerfile
    image: sawtooth-simple-supply-shell
    container_name: simple-supply-shell
    volumes:
      - .:/project/sawtooth-simple-supply
      - /project/sawtooth-simple-supply/curator_app/node_modules
    command: |
      bash -c "
        simple-supply-protogen
        cd curator_app/
        npm run build
        cd ../
        tail -f /dev/null
      "

  simple-supply-tp:
    build:
        context: .
        dockerfile: ./processor/Dockerfile
    image: sawtooth-simple-supply-tp
    container_name: simple-supply-tp
    volumes:
      - '.:/project/sawtooth-simple-supply'
    depends_on:
      - simple-supply-shell
    command: |
      bash -c "
        sleep 1
        simple-supply-tp -v -C tcp://validator:4004
      "

  simple-supply-rest-api:
    build:
      context: .
      dockerfile: ./rest_api/Dockerfile
    image: sawtooth-simple-supply-rest-api
    container_name: simple-supply-rest-api
    volumes:
      - .:/project/sawtooth-simple-supply
    ports:
      - '8000:8000'
    depends_on:
      - simple-supply-shell
    command: |
      bash -c "
        simple-supply-rest-api \
          -B simple-supply-rest-api:8000 \
          -C validator:4004 \
          --db-host postgres \
          -vv
      "

  simple-supply-subscriber:
    build:
      context: .
      dockerfile: ./subscriber/Dockerfile
    image: sawtooth-simple-supply-subscriber
    container_name: simple-supply-subscriber
    volumes:
      - '.:/project/sawtooth-simple-supply'
    depends_on:
      - simple-supply-shell
      - postgres
    command: |
      bash -c "
        simple-supply-subscriber init \
          --db-host postgres \
          -vv
        sleep 3
        simple-supply-subscriber subscribe \
          --db-host postgres \
          -C tcp://validator:4004 \
          -vv
      "

  settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.2
    container_name: sawtooth-settings-tp
    depends_on:
      - validator
    entrypoint: settings-tp -vv -C tcp://validator:4004

  rest-api:
    image: hyperledger/sawtooth-rest-api:1.2
    container_name: sawtooth-rest-api
    expose:
      - 8008
    ports:
      - '8008:8008'
    depends_on:
      - validator
    entrypoint: sawtooth-rest-api -vv -C tcp://validator:4004 --bind rest-api:8008

  validator:
    image: hyperledger/sawtooth-validator:chime
    container_name: sawtooth-validator
    expose:
      - 4004
      - 5050
      - 8800
    volumes:
      - pbft-shared:/pbft-shared
    command: |
      bash -c "
        if [ -e /pbft-shared/validators/validator.priv ]; then
          cp /pbft-shared/validators/validator.pub /etc/sawtooth/keys/validator.pub
          cp /pbft-shared/validators/validator.priv /etc/sawtooth/keys/validator.priv
        fi &&
        if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen
          mkdir -p /pbft-shared/validators || true
          cp /etc/sawtooth/keys/validator.pub /pbft-shared/validators/validator.pub
          cp /etc/sawtooth/keys/validator.priv /pbft-shared/validators/validator.priv
        fi &&
        if [ ! -e config-genesis.batch ]; then
          sawset genesis -k /etc/sawtooth/keys/validator.priv -o config-genesis.batch
        fi &&
        while [[ ! -f /pbft-shared/validators/validator-1.pub ]];
        do sleep 1; done
        echo sawtooth.consensus.pbft.members=\\['\"'$$(cat /pbft-shared/validators/validator.pub)'\"'\\] &&
        if [ ! -e config.batch ]; then
          sawset proposal create \
            -k /etc/sawtooth/keys/validator.priv \
            sawtooth.consensus.algorithm.name=pbft \
            sawtooth.consensus.algorithm.version=1.0 \
            sawtooth.consensus.pbft.members=\\['\"'$$(cat /pbft-shared/validators/validator.pub)'\"'\\] \
            sawtooth.publisher.max_batches_per_block=1200 \
            -o config.batch
        fi &&
        if [ ! -e /var/lib/sawtooth/genesis.batch ]; then
          sawadm genesis config-genesis.batch config.batch
        fi &&
        if [ ! -e /root/.sawtooth/keys/my_key.priv ]; then
          sawtooth keygen my_key
        fi &&
        sawtooth-validator -vv \
          --endpoint tcp://validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind consensus:tcp://eth0:5050 \
          --bind network:tcp://eth0:8800 \
          --scheduler parallel \
          --peering static \
          --maximum-peer-connectivity 10000
      "

  intkey-tp-0:
    image: hyperledger/sawtooth-intkey-tp-python:chime
    container_name: sawtooth-intkey-tp-python-default-0
    expose:
      - 4004
    command: intkey-tp-python -C tcp://validator:4004
    stop_signal: SIGKILL

  pbft:
    image: hyperledger/sawtooth-pbft-engine:chime
    container_name: sawtooth-pbft-engine-default-0
    command: pbft-engine -vv --connect tcp://validator:5050
    stop_signal: SIGKILL
  
  xo-tp-0:
    image: hyperledger/sawtooth-xo-tp-python:chime
    container_name: sawtooth-xo-tp-python-default-0
    expose:
      - 4004
    command: xo-tp-python -vv -C tcp://validator:4004
    stop_signal: SIGKILL

  settings-tp-0:
    image: hyperledger/sawtooth-settings-tp:chime
    container_name: sawtooth-settings-tp-default-0
    expose:
      - 4004
    command: settings-tp -C tcp://validator:4004
    stop_signal: SIGKILL

  postgres:
    image: postgres:alpine
    container_name: simple-supply-postgres
    restart: always
    environment:
      POSTGRES_USER: sawtooth
      POSTGRES_PASSWORD: sawtooth
      POSTGRES_DB: simple-supply
    ports:
      - '5432:5432'

  adminer:
    image: adminer
    container_name: simple-supply-adminer
    restart: always
    ports:
      - '8090:8090'

  curator-app:
    build: ./curator_app
    image: simple-supply-curator-app
    container_name: curator-app
    volumes:
      - ./curator_app/public/:/usr/local/apache2/htdocs/
    expose:
      - 80
    ports:
      - '8040:80'
    depends_on:
      - simple-supply-shell
      - simple-supply-rest-api