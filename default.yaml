# Copyright 2018 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

version: '2.1'
services:

    # intkey-tp-0:
    #     image: hyperledger/sawtooth-intkey-tp-python:chime
    #     container_name: sawtooth-intkey-tp-python-default-0
    #     expose:
    #       - 4004
    #     command: intkey-tp-python -C tcp://validator-0:4004
    #     stop_signal: SIGKILL
    xo-tp-python:
        image: hyperledger/sawtooth-xo-tp-python:chime
        container_name: sawtooth-xo-tp-python-default
        entrypoint: xo-tp-python -vv -C tcp://validator-0:4004
                
    # settings-tp:
    #     image: hyperledger/sawtooth-settings-tp:chime
    #     container_name: sawtooth-settings-tp
    #     depends_on:
    #         - validator-0
    #     entrypoint: settings-tp -vv -C tcp://validator-0:4004
    # rest-api:
    #     image: hyperledger/sawtooth-rest-api:chime
    #     container_name: sawtooth-rest-api
    #     expose:
    #         - 8008
    #     ports:
    #         - '8008:8008'
    #     depends_on:
    #         - validator-0
    #     entrypoint: sawtooth-rest-api -vv -C tcp://validator-0:4004 --bind rest-api:8008

    # validator-0:
    #     image: hyperledger/sawtooth-validator:chime
    #     container_name: sawtooth-validator
    #     expose:
    #         - 4004
    #         - 5050
    #         - 8800
    #     ports:
    #         - '4004:4004'
    #     volumes:
    #         - pbft-shared:/pbft-shared
    #     command: |
    #         bash -c "
    #         if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
    #         sawadm keygen
    #         sawtooth keygen my_key
    #         sawset genesis -k /root/.sawtooth/keys/my_key.priv
    #         sawset proposal create -k /root/.sawtooth/keys/my_key.priv \
    #             sawtooth.consensus.algorithm.name=Devmode \
    #             sawtooth.consensus.algorithm.version=0.1 \
    #             -o config.batch
    #         sawadm genesis config-genesis.batch config.batch
    #         fi;
    #         sawtooth-validator -vv \
    #         --endpoint tcp://validator-0:8800 \
    #         --bind component:tcp://eth0:4004 \
    #         --bind network:tcp://eth0:8800 \
    #         --bind consensus:tcp://eth0:5050 \
    #         --scheduler parallel \
    #         --peering static \
    #         --maximum-peer-connectivity 10000"

    devmode-engine:
        image: hyperledger/sawtooth-devmode-engine-rust:chime

        expose:
            - 5050
        ports:
            - '5050:5050'
        container_name: sawtooth-devmode-engine-rust-default
        # depends_on:
        #     - validator-0
        entrypoint: devmode-engine-rust --connect tcp://validator-0:5050
    raft-engine:
        image: hyperledger/sawtooth-raft-engine
        container_name: sawtooth-raft-engine-rust-default
        volumes:
            - .:/project/sawtooth-raft
        working_dir: /project/sawtooth-raft/
        command: raft-engine --connect tcp://validator-0:5050 -v
    simple-supply-shell:
        build:
            context: .
            dockerfile: ./shell/Dockerfile
        image: sawtooth-simple-supply-shell
        container_name: simple-supply-shell
        volumes:
            - .:/project/sawtooth-simple-supply
            - /project/sawtooth-simple-supply/curator_app/node_modules
        command: |
            bash -c "
            simple-supply-protogen
            cd curator_app/
            npm run build
            cd ../
            tail -f /dev/null
            "
    simple-supply-tp:
        build:
            context: .
            dockerfile: ./processor/Dockerfile
        image: sawtooth-simple-supply-tp
        container_name: simple-supply-tp
        volumes:
            - '.:/project/sawtooth-simple-supply'
        depends_on:
            - simple-supply-shell
        command: |
            bash -c "
            sleep 1
            simple-supply-tp -v -C tcp://validator-0:4004
            "
    simple-supply-rest-api:
        build:
            context: .
            dockerfile: ./rest_api/Dockerfile
        image: sawtooth-simple-supply-rest-api
        container_name: simple-supply-rest-api
        volumes:
            - .:/project/sawtooth-simple-supply
        ports:
            - '8000:8000'
        depends_on:
            - simple-supply-shell
        command: |
            bash -c "
            simple-supply-rest-api \
                -B simple-supply-rest-api:8000 \
                -C validator-0:4004 \
                --db-host postgres \
                -vv
            "
    simple-supply-subscriber:
        build:
            context: .
            dockerfile: ./subscriber/Dockerfile
        image: sawtooth-simple-supply-subscriber
        container_name: simple-supply-subscriber
        volumes:
            - '.:/project/sawtooth-simple-supply'
        depends_on:
            - simple-supply-shell
            - postgres
        command: |
            bash -c "
            simple-supply-subscriber init \
                --db-host postgres \
                -vv
            sleep 3
            simple-supply-subscriber subscribe \
                --db-host postgres \
                -C tcp://validator-0:4004 \
                -vv
            "
    postgres:
        image: postgres:alpine
        container_name: simple-supply-postgres
        restart: always
        environment:
            POSTGRES_USER: sawtooth
            POSTGRES_PASSWORD: sawtooth
            POSTGRES_DB: simple-supply
        ports:
            - '5432:5432'
    adminer:
        image: adminer
        container_name: simple-supply-adminer
        restart: always
        expose:
            - 8090
        ports:
            - '8090:8080'
    curator-app:
        build: ./curator_app
        image: simple-supply-curator-app
        container_name: curator-app
        volumes:
            - ./curator_app/public/:/usr/local/apache2/htdocs/
        expose:
            - 80
        ports:
            - '8040:80'
        depends_on:
            - simple-supply-shell
            - simple-supply-rest-api
